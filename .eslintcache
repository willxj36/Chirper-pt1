[{"C:\\Users\\William\\Documents\\coding school\\Source\\chirper-pt1\\src\\index.js":"1","C:\\Users\\William\\Documents\\coding school\\Source\\chirper-pt1\\src\\app.jsx":"2","C:\\Users\\William\\Documents\\coding school\\Source\\chirper-pt1\\src\\components\\Navbar.jsx":"3","C:\\Users\\William\\Documents\\coding school\\Source\\chirper-pt1\\src\\components\\NewChirpBox.jsx":"4","C:\\Users\\William\\Documents\\coding school\\Source\\chirper-pt1\\src\\components\\ChirpPanel.jsx":"5"},{"size":149,"mtime":1610656059556,"results":"6","hashOfConfig":"7"},{"size":1016,"mtime":1610737015773,"results":"8","hashOfConfig":"7"},{"size":952,"mtime":1610736440032,"results":"9","hashOfConfig":"7"},{"size":1999,"mtime":1610737015773,"results":"10","hashOfConfig":"7"},{"size":1565,"mtime":1610682707562,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ef9a57",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\William\\Documents\\coding school\\Source\\chirper-pt1\\src\\index.js",[],"C:\\Users\\William\\Documents\\coding school\\Source\\chirper-pt1\\src\\app.jsx",[],"C:\\Users\\William\\Documents\\coding school\\Source\\chirper-pt1\\src\\components\\Navbar.jsx",["24"],"import React, { Component } from 'react';\r\nimport NewChirpBox from './NewChirpBox';\r\n\r\nclass Navbar extends Component {\r\n    state = {\r\n        userName: 'anonymous',\r\n        newBox: false\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (this.state.newBox) {\r\n            this.setState({\r\n                newBox: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                newBox: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"top-container col\">\r\n                <nav className=\"navbar navbar-dark bg-success shadow rounded\">\r\n                    <a href=\"#\" className=\"btn btn-dark\" role=\"button\">Chirper Home</a>\r\n                    <span>Welcome, {this.state.userName}</span>\r\n                    <button onClick={this.handleClick} className=\"btn btn-primary\">New Chirp</button>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;",["25","26"],"C:\\Users\\William\\Documents\\coding school\\Source\\chirper-pt1\\src\\components\\NewChirpBox.jsx",[],"C:\\Users\\William\\Documents\\coding school\\Source\\chirper-pt1\\src\\components\\ChirpPanel.jsx",[],{"ruleId":"27","severity":1,"message":"28","line":26,"column":21,"nodeType":"29","endLine":26,"endColumn":72},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-global-assign","no-unsafe-negation"]